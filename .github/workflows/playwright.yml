name: Playwright Tests
on:
  push:
    branches: [main]
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    environment:
      name: github-pages
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
      - name: Generate translations
        run: npm run localization-process-v2
      # - name: Run server
      #   run: npm start &
      - name: Install e2e dependencies
        run: |
          cd e2e
          npm ci
      - name: Get installed Playwright version
        id: playwright-version
        run: |
          cd e2e
          echo "PLAYWRIGHT_VERSION=$(npm list "@playwright/test" | grep "@playwright/test" | grep -oE '[^ ]+$')" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        run: |
          cd e2e
          npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
  
      - name: Run Playwright tests
        run: |
          cd e2e 
          DEBUG=pw:webserver ENV=local npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: github-pages
          path: e2e/playwright-report/
          retention-days: 30

      # The following steps are for deploying the report to GitHub Pages
      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v3
      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: e2e/playwright-report/
      #     retention-days: 30
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: e2e/playwright-report/
      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v2

  # By default, the second job only runs after the first is complete
  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    # Always run this job
    if: ${{ always() }}
    needs: [test]
    steps:

      - uses: abinoda/slack-action@master
        env:
          # required
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          # custom message to send to slack
          args: '{\"channel\":\"${{ secrets.SLACK_PR_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Commit:* ${{ github.event.head_commit.message }}\"}}]}'

        # Pick up events even if the job is success.
        if: success()
