# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single test job since we're just deploying
  test:
    runs-on: ubuntu-latest
    outputs:
      page_url: https://quizizz-cypress-test-results.s3.amazonaws.com/dev/playwright-report-${{ github.run_id }}/index.html
      commit_message: ${{ steps.commit.outputs.commit_message }}
      summary_item_1: ${{ steps.summary.outputs.summary_item_1 }}
      summary_item_2: ${{ steps.summary.outputs.summary_item_2 }}
      summary_item_3: ${{ steps.summary.outputs.summary_item_3 }}
      summary_item_4: ${{ steps.summary.outputs.summary_item_4 }}
      summary_item_5: ${{ steps.summary.outputs.summary_item_5 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        id: commit
        run: echo "::set-output name=commit_message::$(git show -s --format=%s)"
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - run: npm ci --ignore-scripts
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Run Playwright tests
        run: npx playwright test
      - name: Custom summary
        id: summary
        run: |
          echo "::set-output name=summary_item_1::$(sed '3! d' custom-summary.txt)"
          echo "::set-output name=summary_item_2::$(sed '4! d' custom-summary.txt)"
          echo "::set-output name=summary_item_3::$(sed '5! d' custom-summary.txt)"
          echo "::set-output name=summary_item_4::$(sed '6! d' custom-summary.txt)"
          echo "::set-output name=summary_item_5::$(sed '9! d' custom-summary.txt)"
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Create unique folder
        run: mkdir playwright-report-${{ github.run_id }}
      - name: Copy report files
        run: cp -R playwright-report/. playwright-report-${{ github.run_id }}
      - name: Deploy to S3 bucket
        uses: keithweaver/aws-s3-github-action@v1.0.0
        id: deployment
        with:
          command: cp
          source: ./playwright-report-${{ github.run_id }}/index.html
          destination: s3://quizizz-cypress-test-results/dev/playwright-report-${{ github.run_id }}/index.html
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
      - name: Set page URL output
        run: echo "::set-output name=page_url::https://quizizz-cypress-test-results.s3.amazonaws.com/dev/playwright-report-${{ github.run_id }}/index.html"
      - name: Echo steps
        run: echo "${{toJson(steps)}}"

  # Send notification on Slack
  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    # Always run this job
    if: ${{ always() }}
    needs: [test]
    steps:
      - name: Set mark
        id: mark
        run: |
          if [[ ${{ needs.test.result }} == 'success' ]]; then
            echo "::set-output name=mark:::check-mark:"
          else
            echo "::set-output name=mark:::wrong-mark:"
          fi
      - name: Get commit date
        id: date
        run: |
          commit_date=${{ github.event.pull_request.head.sha }}
          echo "Commit Date: $commit_date"
      - name: Echo steps
        run: echo "${{toJson(steps)}}"
      - name: Echo needs
        run: echo "${{toJson(needs)}}"
      - name: Echo needs page_url
        run: echo "${{needs.test.outputs.page_url}}"
      - uses: abinoda/slack-action@master
        env:
          # required
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          # custom message to send to slack 
          args: '{\"channel\":\"${{ secrets.SLACK_PR_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"${{ steps.mark.outputs.mark }} <https://github.com/deusofka/github-actions-dummy/pull/${{github.event.pull_request.number}}|Pull Request: #${{github.event.pull_request.number}}> <${{needs.test.outputs.page_url}}|Test report>\"}},{\"type\":\"divider\"},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"commit ${{ github.sha }} (*HEAD -> <https://github.com/deusofka/github-actions-dummy/tree/${{github.event.pull_request.head.ref}}|${{github.event.pull_request.head.ref}}>*)\nAuthor: <https://github.com/${{github.event.pull_request.user.login}}|${{github.event.pull_request.user.login}}>\nDate: ${{steps.date.outputs.commit_date}}\n<https://github.com/deusofka/github-actions-dummy/commit/${{ github.sha }}|${{needs.test.outputs.commit_message}}>\"}},{\"type\":\"divider\"},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"`‚úÖ` ${{ needs.test.outputs.summary_item_1 }}\n`‚ùå` ${{ needs.test.outputs.summary_item_2 }}\n`üîÜ` ${{ needs.test.outputs.summary_item_3 }}\n`‚è≠Ô∏è` ${{ needs.test.outputs.summary_item_4 }}\n`‚è±Ô∏è` ${{ needs.test.outputs.summary_item_5 }}\"}}]}'

        # Pick up events even if the job is success.
        if: success()
